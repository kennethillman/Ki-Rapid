
///////////////////////////
///// GRID 
/////////////////////////


 @import "_mixins.scss";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////
// Variables // 
//////////////

$prefix 				: tc-grid !default;
$pre 					: tc !default;
$width 					: 960 !default;
$columns 				: 12 !default;
$gutter 				: 20 !default;
$outer-padding 			: 0 !default;
$behavior 				: fluid !default;
$min-width				: 240 !default;
 
// Default variables for extendend rwd grid
$extended-prefix		: tsr-wide !default;
$extended-width			: 1400 !default;
$extended-outer-padding	: 0 !default;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////
// Mixin - Grid - RWD //
///////////////////////

// -  		   ($prefix, $width, $columns, $gutter, $outer-padding, $behavior, $min-width);
@mixin grid-rwd($prefix, $width, $columns, $gutter, $outer-padding, $behavior, $min-width) {


	.#{$prefix} .#{$pre}-container{ 

////// Clear both rows and cols properly

		//@include clearfix;

////// Base style and behavior setup

			@if $behavior == "fluid" {												
			    
			    max-width:none;																						
			    width:100%;															
			
			} @else {
			
			  	max-width: 100%;
			  	width:$width+px;												
			
			}
																						
				min-width: $min-width+px; 											
				margin:0 auto; 
				padding:0 $outer-padding+px;


////// Row clearing and adjustment for row in row 

		 .#{$pre}-row{ 
			
			@include clearfix;
			position:relative;
		
			.#{$pre}-row{ 
				margin:0 (-$gutter*.5px);
			}

			> .#{$pre}-row{ 
				margin:0 0;
			}

		} // .#{$pre}-row END

}	// .container END

////// Base styles for all columns
		
		.#{$prefix} [class *= "col-"] { 
			float:left; min-height:1px; display:block; padding: 0 $gutter * .5px;	
		} 

////// Column width (Mobile first)	

	.#{$prefix} [class *= "col-"] { width:100%;}


////// Maximize classes
	
	.#{$prefix} [class *= "maximized"] [class *= "col-"]  		{padding:0;}
	.#{$prefix} [class *= "maximized"] [class *= "tsr-module"] 	{margin:0;}
	.#{$prefix} [class *= "maximized"].#{$pre}-row 				{margin: 0 0 #{$gutter}px; }



/////////////////////////////////////////////////////////////////////////////////////////////////////////
// RWD 
/////////////////////////////////////////////////////////////////////////////////////////////////////////

////// XSMALL (Default look up)


////// SMALL

    @include media-min(480px) {
    	
	    // Full & Half columns
		.#{$prefix} .col-full		{width:100%;}
			
		.#{$prefix} .col-half		{width:50%;}

		// Columns > 1/2
		$maximize: ceil($columns / 2) + 1;

		@for $p from $maximize through $columns {
	  		.#{$prefix} .col-#{$p} 	{width:100%;}
		}

		// Columns < 1/2
		$collaps: ceil($columns / 2);

		@for $i from 1 through $collaps {
	  		.#{$prefix} .col-#{$i} 	{width:50%;}
		}

		// Push & Pull
	  	.#{$prefix} [class *= "push"],
		.#{$prefix} [class *= "pull"]{margin:0;}

	} // min 480px


////// Media

    @include media-min(600px) {

	} // min 600px


////// Media

    @include media-min(768px) {


		// Column widths
		@for $i from 1 through $columns {	
	  		.#{$prefix} .col-#{$i}												
		  	{
		  		width: (100% / $columns) * $i;
		  	}
		} 

		// Push
		$push: $columns - 1;

		@for $i from 1 through $push {
	  		.#{$prefix} .push-#{$i} 												
		  	{margin-left: (100% / $columns) * $i;} 
		} 

		// Pull
		$pull: $columns - 1;

		@for $i from 1 through $pull {
	  		.#{$prefix} .pull-#{$i} 												
		  	{margin-right: (100% / $columns) * $i;}
		} 


	} // min 768px


////// Media

    @include media-min(996px) {

	} // min 996px

////// Media

    @include media-min(1200px) {

	} // min 1220px




/////////////////////////////////////////////////////////////////////////////////////////////////////////
// INTERNET EXPLORER 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////


/*	@include old-ie {

		.#{$prefix} {

			//[class *= "col-"] { width:auto;}
 	
 	 		.#{$pre}-container{
 	 			max-width:$width+px;
				width:$width+px;
 	 		} 

			

			.ie-7 &{

				// Procentage calculation
			
			} // .ie7 & END

		}
		
	} // old-ie END */


/////////////////////////////////////////////////////////////////////////////////////////////////////////
////// MIXIN END

} // MIXIN grid-rwd END



/////////////////////////////////////////////////////////////////////////////////////////////////////////
// Mixin - Extend a grid
/////////////////////////////////////////////////////////////////////////////////////////////////////////
                



/////////////////////////////////////////
// Mixin - Add a breakpoint adjustment //
/////////////////////////////////////////

@mixin grid-breakpoint($breakpoint, $prefix, $behavior, $width, $gutter, $outer-padding) {



  	@include media-min($breakpoint) {

  	.#{$prefix} .#{$pre}-container{

		@if $behavior == "fluid" {	

	    	max-width: none;												
	    	width:100%;																
	  	
	  	} @else {
	  	
	  		max-width: 100%;
	  		width:$width+px;													
	  	
	  	}
																					
			padding:0 $outer-padding+px;


////// Row clearing and adjustment for row in row (same grid)
	
	  	.#{$pre}-row{ 
		
			.#{$pre}-row{ 
				margin:0 (-$gutter*.5px);
			}

			> .#{$pre}-row{ 
				margin:0;
			}

		} // .#{$pre}-row END

	} // container END


////// Base styles for all columns
		
	.#{$prefix} [class *= "col-"] { 
		padding: 0 $gutter*.5px;
	} 

	// Maximized row
	.#{$prefix} [class *= "maximized"].#{$pre}-row{ 
		margin: 0 0 #{$gutter}px; 						
	}


  } // @media END


} // grid-breakpoint mixin END







/////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MAKE THE GRID
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

// @include grid-rwd   ($prefix, $width, $columns, $gutter, $outer-padding, $behavior, $min-width);
   @include grid-rwd   ($prefix, $width, $columns, $gutter, $outer-padding, fixed, $min-width);

// @include grid-breakpoint($breakpoint, $prefix, $behavior, $width, $gutter, $outer-padding);
   @include grid-breakpoint(1441px, $prefix,  fixed, 1200 , 24, 0);
   @include grid-breakpoint(1820px, $prefix,  fixed, 1364 , 26, 0);


/////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Full fluid exampel -  (Leave width in breakpoint default for full fluid)*
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

   // @include grid-rwd   ($name, $prefix, $width, $columns, $gutter, $outer-padding, $behavior, $min-width, $break480, $ie7);
   // @include grid-breakpoint($media-768, $name, $prefix, $media, fluid, $width , 10, 0);
   // @include grid-breakpoint($media-480, $name, $prefix, $media, fluid, $width , 10, 0);



/////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

  

